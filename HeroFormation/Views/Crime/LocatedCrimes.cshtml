@model IEnumerable<HeroFormation.Models.Crimes>
@using System;
@{
    ViewBag.Title = "LocatedCrimes";
    ViewBag.isHome = false;
}

<h2>Fight Crime</h2>

<h1>Location has been detected as..</h1>
<p id="location"></p>
<input type="submit" value="Get My Location" class="btn btn-success" id="locationBtn" />
@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>*@
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Category)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Location.Latitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Location.Longitude)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Location.Street.Name)
        </th>
        <th></th>
    </tr>

    @*@Html.Display(Model.Count)*@

    @foreach (var item in Model)
    {

        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Category)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location.Latitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location.Longitude)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location.Street.Name)
            </td>

            @*<td>
                    @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
                    @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
                </td>*@
        </tr>
    }

</table>

@section scripts{
    <script src="~/js/map.js"></script>

    <script type="text/javascript">

        $(document).ready(function () {

            function displayLocation(position) {

                var latitude = position.coords.latitude.toString();
                var longitude = position.coords.longitude.toString();

                var f = {};
                f.url = '@Url.Action("LocatedCrimes", "Crime")';
                f.type = "POST";
                f.dataType = "json";
                f.data = JSON.stringify({ Latitude: latitude, Longitude: longitude });
                alert(f.data);
                f.contentType = "application/json";
                //f.success = function (response) {
                //    alert("success");
                //};
                //f.error = function (response) {
                //    alert("failed");

                //};
                $.ajax(f);
                window.location.reload(true);

            };

            $("#locationBtn").click(function () {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(displayLocation);
                } else {
                    alert("Your browser does not support geolocation");
                }
            });

            function postCoords(position)
            {
                var f = {};
                f.url = '@Url.Action("GetLocation", "Crime")';
                f.type = "POST";
                f.dataType = "json";
                f.data = JSON.stringify({ Longitude: position.coords.latitude, Latitude: position.coords.longitude });
                f.contentType = "application/json";
                f.success = function (response) {
                    alert("success");
                };
                f.error = function (response) {
                    alert("failed");

                };
                $.ajax(f);
            };

        });

    </script>
}

