@model IEnumerable<HeroFormation.Models.Crimes>
@using System;
@{
    ViewBag.Title = "Crimes";
    ViewBag.isHome = false;
}

<h1 class="titlePageText">Crime Fighters, Unite!</h1>

<h2>Keep Your Senses On High Alert, Super!</h2>
<p id="location"></p>

<h2>Use Your Crime Detecter Below, And Detect Recent Criminal Activity In Your Area</h2>
<input type="submit" value="Detect Crime" class="btn btn-success" id="locationBtn" />
<br />
<br />

<canvas id="crimeChart" width="400" height="400" style=""></canvas>

@section scripts{
    <script src="~/lib/Chart-js/Chart.js"></script>
    <script type="text/javascript">

        $(document).ready(function () {
            //The following JS scripts are kept inline due to the use of Razor View functionality = To be removed when a fix is found

            //Upon clicking the detect crime button, obtain the user's location via the browser's native geolocation parse it to the postLocationToTheServer function
            $("#locationBtn").click(function () {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(postLocationToTheServer);
                } else {
                    alert("Your browser does not support geolocation");
                }
            });

            //This function makes a HTTP post of the user's position to the Crime Controller on the server and parses the result to the function; that creates the chart used to display the response
            function postLocationToTheServer(position) {

                var latitude = position.coords.latitude.toString();
                var longitude = position.coords.longitude.toString();

                var f = {};
                f.url = '@Url.Action("GetCrimesByLocation", "Crime")';
                f.type = "POST";
                f.dataType = "json";
                f.data = JSON.stringify({ Latitude: latitude, Longitude: longitude });
                f.contentType = "application/json";
                f.success = function (response) {
                    populateData(response);
                };
                f.error = function (response) {
                    alert("HttpPostFailed \n Repsonse:" + response);
                };
                $.ajax(f);

            };

            //The following function interprets the crime data into its associated categeories, and displays them on a pie chart
            function populateData(input)
            {
           
                var antiSocial = 0;
                var bikeTheft = 0;
                var burglary = 0;
                var crimDamageArson = 0;
                var drugs = 0;
                var otherCrime = 0;
                var otherTheft = 0;
                var possessionOfWeapons = 0;
                var publicOrder = 0;
                var robbery = 0;
                var shoplifting = 0;
                var theftFromPerson = 0;
                var vechicleCrime = 0;
                var violentCrime = 0;

                var labels = [];
                var data = [];

                for (i = 0; i < input.length; i++) {
                    
                    var crime = input[i];
                    switch (crime["category"])
                    {
                        case "anti-social-behaviour":
                            antiSocial++;
                            continue;
                        case "bicycle-theft":
                            bikeTheft++;
                            continue;
                        case "burglary":
                            burglary++;
                            continue;
                        case "criminal-damage-arson":
                            crimDamageArson++;
                            continue;
                        case "drugs":
                            drugs++;
                            continue;
                        case "other-crime":
                            otherCrime++;
                            continue;
                        case "other-theft":
                            otherTheft++;
                            continue;
                        case "possession-of-weapons":
                            possessionOfWeapons++;
                            continue;
                        case "public-order":
                            publicOrder++;
                            continue;
                        case "robbery":
                            robbery++;
                            continue;
                        case "shoplifting":
                            shoplifting++;
                            continue;
                        case "theft-from-the-person":
                            theftFromPerson++;
                            continue;
                        case "vehicle-crime":
                            vechicleCrime++;
                            continue;
                        case "violent-crime":
                            violentCrime++;
                            continue;

                    }
                    
                }

                if (antiSocial > 0) {
                    labels.push("Anti-social Behaviour");
                    data.push(antiSocial);
                }

                if (bikeTheft > 0) {
                    labels.push("Bicycle Theft");
                    data.push(bikeTheft);
                }

                if (burglary > 0) {
                    labels.push("Burglary");
                    data.push(burglary);
                }

                if (crimDamageArson > 0) {
                    labels.push("Criminal Damage and Arson");
                    data.push(crimDamageArson);
                }

                if (drugs > 0) {
                    labels.push("Drugs");
                    data.push(drugs);
                }

                if (otherCrime > 0) {
                    labels.push("Other Crime");
                    data.push(otherCrime);
                }

                if (otherTheft > 0) {
                    labels.push("Other Theft");
                    data.push(otherTheft);
                }

                if (possessionOfWeapons > 0) {
                    labels.push("Poessession of Weapons");
                    data.push(possessionOfWeapons);
                }

                if (publicOrder > 0) {
                    labels.push("Public Order");
                    data.push(publicOrder);
                }

                if (robbery > 0) {
                    labels.push("Robbery");
                    data.push(robbery);
                }

                if (shoplifting > 0) {
                    labels.push("Shoplifting");
                    data.push(shoplifting);
                }

                if (theftFromPerson > 0) {
                    labels.push("Theft from the Person");
                    data.push(theftFromPerson);
                }

                if (vechicleCrime > 0) {
                    labels.push("Vehicle Crime");
                    data.push(vechicleCrime);
                }

                if (violentCrime > 0) {
                    labels.push("Violent Crime");
                    data.push(violentCrime);
                }


                var ctx = document.getElementById("crimeChart").getContext('2d');
                var options = {
                    title: {
                        display: true,
                        text: 'Crime Detected In Your Area',
                        fontColor: "white",
                        fontSize: 20
                    }, legend: {
                        labels: {
                            fontColor: "white",
                            fontSize: 18
                        }
                    },
                };
                       
                var myChart = new Chart(ctx, {
                    type: 'pie',
                    data: {
                        labels: labels,
                        datasets: [{
                            label: 'Criminal Activity in your Area',
                            backgroundColor: [
                                'rgba(255, 99, 132, 0.7)',
                                'rgba(54, 162, 235, 0.7)',
                                'rgba(255, 206, 86, 0.7)',
                                'rgba(75, 192, 192, 0.7)',
                                'rgba(153, 102, 255, 0.7)',
                                'rgba(255, 159, 64, 0.7)',
                                'rgba(255, 99, 132, 0.7)',
                                'rgba(54, 162, 235, 0.7)',
                                'rgba(255, 206, 86, 0.7)',
                                'rgba(75, 192, 192, 0.7)',
                                'rgba(153, 102, 255, 0.7)',
                                'rgba(255, 159, 64, 0.7)',
                                'rgba(255, 206, 86, 0.7)',
                                'rgba(75, 192, 192, 0.7)'
                            ],
                            borderColor: [
                                'rgba(255, 99, 132, 0.7)',
                                'rgba(54, 162, 235, 0.7)',
                                'rgba(255, 206, 86, 0.7)',
                                'rgba(75, 192, 192, 0.7)',
                                'rgba(153, 102, 255, 0.7)',
                                'rgba(255, 159, 64, 0.7)',
                                'rgba(255, 99, 132, 0.7)',
                                'rgba(54, 162, 235, 0.7)',
                                'rgba(255, 206, 86, 0.7)',
                                'rgba(75, 192, 192, 0.7)',
                                'rgba(153, 102, 255, 0.7)',
                                'rgba(255, 159, 64, 0.7)',
                                'rgba(255, 206, 86, 0.7)',
                                'rgba(75, 192, 192, 0.7)'
                            ],
                            data: data,
                            borderWidth: 1
                        }]
                    },
                    options: options
                });  
                
            }

            //CURRENTLY UNUSED - This function can be used to post additional data to a chart already displayed 
            function addData(chart, label, data) {
                chart.data.labels.push(label);
                chart.data.datasets.forEach((dataset) => {
                    dataset.data.push(data);
                });
                chart.update();
            }

        });

    </script>
}

